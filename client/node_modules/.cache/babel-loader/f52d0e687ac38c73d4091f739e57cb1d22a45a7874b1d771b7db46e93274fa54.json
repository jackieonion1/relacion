{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianfornelli/XcodeProjects/Relacion/CascadeProjects/windsurf-project/client/src/components/MonthlyCalendarView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst monthNames = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"];\nconst dayNames = ['D', 'L', 'M', 'X', 'J', 'V', 'S'];\nexport default function MonthlyCalendarView({\n  events = []\n}) {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const eventsByDay = useMemo(() => {\n    const eventMap = new Map();\n    const eventLanes = new Map(); // Track which lane each event uses\n    let nextLane = 0;\n\n    // Sort events by start date to process them in chronological order\n    const sortedEvents = [...events].sort((a, b) => {\n      var _a$start, _b$start;\n      if (!((_a$start = a.start) !== null && _a$start !== void 0 && _a$start.toDate) || !((_b$start = b.start) !== null && _b$start !== void 0 && _b$start.toDate)) return 0;\n      return a.start.toDate() - b.start.toDate();\n    });\n    for (const event of sortedEvents) {\n      var _event$start, _event$end;\n      if (!((_event$start = event.start) !== null && _event$start !== void 0 && _event$start.toDate)) continue;\n      const start = event.start.toDate();\n      const end = ((_event$end = event.end) === null || _event$end === void 0 ? void 0 : _event$end.toDate()) || start;\n\n      // Find an available lane for this event\n      let assignedLane = null;\n      for (let lane = 0; lane < 3; lane++) {\n        let laneAvailable = true;\n        let current = new Date(start.getFullYear(), start.getMonth(), start.getDate());\n\n        // Check if this lane is free for all days of this event\n        while (current <= end && laneAvailable) {\n          const dateString = `${current.getFullYear()}-${current.getMonth()}-${current.getDate()}`;\n          if (eventMap.has(dateString)) {\n            const dayEvents = eventMap.get(dateString);\n            if (dayEvents.some(e => e.lane === lane)) {\n              laneAvailable = false;\n            }\n          }\n          current.setDate(current.getDate() + 1);\n        }\n        if (laneAvailable) {\n          assignedLane = lane;\n          break;\n        }\n      }\n\n      // If no lane available, skip this event (max 3 events per day)\n      if (assignedLane === null) continue;\n\n      // Now assign this event to its lane for all its days\n      let current = new Date(start.getFullYear(), start.getMonth(), start.getDate());\n      while (current <= end) {\n        const dateString = `${current.getFullYear()}-${current.getMonth()}-${current.getDate()}`;\n        const isStart = current.toDateString() === start.toDateString();\n        const isEnd = current.toDateString() === end.toDateString();\n        let type = 'middle';\n        if (isStart && isEnd) type = 'single';else if (isStart) type = 'start';else if (isEnd) type = 'end';\n\n        // Store event with its assigned lane\n        if (!eventMap.has(dateString)) {\n          eventMap.set(dateString, []);\n        }\n        eventMap.get(dateString).push({\n          type,\n          eventType: event.eventType || 'conjunto',\n          lane: assignedLane\n        });\n        current.setDate(current.getDate() + 1);\n      }\n    }\n    return eventMap;\n  }, [events]);\n  const year = currentDate.getFullYear();\n  const month = currentDate.getMonth();\n  const firstDayOfMonth = (new Date(year, month, 1).getDay() + 6) % 7;\n  const daysInMonth = new Date(year, month + 1, 0).getDate();\n  const handlePrevMonth = () => {\n    setCurrentDate(new Date(year, month - 1, 1));\n  };\n  const handleNextMonth = () => {\n    setCurrentDate(new Date(year, month + 1, 1));\n  };\n  const calendarDays = [];\n  // Padding for previous month\n  for (let i = 0; i < firstDayOfMonth; i++) {\n    calendarDays.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2\"\n    }, `pad-start-${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }, this));\n  }\n  // Days of current month\n  for (let day = 1; day <= daysInMonth; day++) {\n    const date = new Date(year, month, day);\n    const isToday = date.toDateString() === new Date().toDateString();\n    const isSpecialDay = day === 24; // Day 24 is special ❤️\n    const isAprilParty = day === 21 && month === 3; // April 21 🎉\n    const isNovemberParty = day === 4 && month === 10; // November 4 🎉\n    const dateString = `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`;\n    const eventInfos = eventsByDay.get(dateString) || [];\n\n    // Render up to 3 event lines, stacked vertically\n    const eventBars = eventInfos.slice(0, 3).map((eventInfo, index) => {\n      // Color based on event type\n      let colorClass = 'bg-rose-500'; // Default: conjunto (pink)\n      if (eventInfo.eventType === 'novio') {\n        colorClass = 'bg-yellow-500'; // Novio: yellow\n      } else if (eventInfo.eventType === 'novia') {\n        colorClass = 'bg-purple-500'; // Novia: purple\n      }\n\n      // Position each line vertically (bottom-1.5, bottom-3, bottom-4.5)\n      const bottomPosition = index === 0 ? 'bottom-1.5' : index === 1 ? 'bottom-3' : 'bottom-4.5';\n      const baseClasses = `absolute ${bottomPosition} h-1 ${colorClass}`;\n      if (eventInfo.type === 'single') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${baseClasses} left-1/2 -translate-x-1/2 w-4 rounded-full`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 16\n        }, this);\n      } else if (eventInfo.type === 'start') {\n        // Start from where single event would start, extend to edge + margin\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${baseClasses} right-1 rounded-full`,\n          style: {\n            left: 'calc(50% - 8px)'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 16\n        }, this);\n      } else if (eventInfo.type === 'end') {\n        // Start from edge + margin, end where single event would end  \n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${baseClasses} left-1 rounded-full`,\n          style: {\n            right: 'calc(50% - 8px)'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 16\n        }, this);\n      } else if (eventInfo.type === 'middle') {\n        // Full width with small margins to preserve border radius\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${baseClasses} left-1 right-1 rounded-full`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 16\n        }, this);\n      }\n      return null;\n    });\n    calendarDays.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-2 text-center border border-gray-200/80 rounded-lg h-16 flex items-center justify-center relative ${isSpecialDay ? 'bg-rose-50' : ''} ${isAprilParty ? 'bg-purple-50' : ''} ${isNovemberParty ? 'bg-yellow-50' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: `w-8 h-8 flex items-center justify-center rounded-full ${isToday ? 'bg-rose-500 text-white' : ''}`,\n        children: day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), isSpecialDay && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-0.5 right-0.5 text-xs\",\n        children: \"\\uD83D\\uDC96\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), (isAprilParty || isNovemberParty) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-0.5 right-0.5 text-xs\",\n        children: \"\\uD83C\\uDF89\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), eventBars]\n    }, `day-${day}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePrevMonth,\n        className: \"btn-ghost p-2 rounded-full w-10 h-10 flex items-center justify-center text-xl\",\n        children: \"\\u2039\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold text-lg text-center\",\n        children: [monthNames[month], \" \", year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextMonth,\n        className: \"btn-ghost p-2 rounded-full w-10 h-10 flex items-center justify-center text-xl\",\n        children: \"\\u203A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-2 text-center text-sm font-medium text-gray-500 mb-2\",\n      children: [dayNames.slice(1).map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 39\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: dayNames[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-7 gap-1\",\n      children: calendarDays\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n_s(MonthlyCalendarView, \"dOczEMx+L9V+C7xfo5lFpnCdBJ8=\");\n_c = MonthlyCalendarView;\nvar _c;\n$RefreshReg$(_c, \"MonthlyCalendarView\");","map":{"version":3,"names":["React","useState","useMemo","jsxDEV","_jsxDEV","monthNames","dayNames","MonthlyCalendarView","events","_s","currentDate","setCurrentDate","Date","eventsByDay","eventMap","Map","eventLanes","nextLane","sortedEvents","sort","a","b","_a$start","_b$start","start","toDate","event","_event$start","_event$end","end","assignedLane","lane","laneAvailable","current","getFullYear","getMonth","getDate","dateString","has","dayEvents","get","some","e","setDate","isStart","toDateString","isEnd","type","set","push","eventType","year","month","firstDayOfMonth","getDay","daysInMonth","handlePrevMonth","handleNextMonth","calendarDays","i","className","fileName","_jsxFileName","lineNumber","columnNumber","day","date","isToday","isSpecialDay","isAprilParty","isNovemberParty","eventInfos","eventBars","slice","map","eventInfo","index","colorClass","bottomPosition","baseClasses","style","left","right","children","onClick","_c","$RefreshReg$"],"sources":["/Users/sebastianfornelli/XcodeProjects/Relacion/CascadeProjects/windsurf-project/client/src/components/MonthlyCalendarView.jsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\n\nconst monthNames = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\", \"Noviembre\", \"Diciembre\"];\nconst dayNames = ['D', 'L', 'M', 'X', 'J', 'V', 'S'];\n\nexport default function MonthlyCalendarView({ events = [] }) {\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  const eventsByDay = useMemo(() => {\n    const eventMap = new Map();\n    const eventLanes = new Map(); // Track which lane each event uses\n    let nextLane = 0;\n    \n    // Sort events by start date to process them in chronological order\n    const sortedEvents = [...events].sort((a, b) => {\n      if (!a.start?.toDate || !b.start?.toDate) return 0;\n      return a.start.toDate() - b.start.toDate();\n    });\n    \n    for (const event of sortedEvents) {\n      if (!event.start?.toDate) continue;\n      const start = event.start.toDate();\n      const end = event.end?.toDate() || start;\n      \n      // Find an available lane for this event\n      let assignedLane = null;\n      for (let lane = 0; lane < 3; lane++) {\n        let laneAvailable = true;\n        let current = new Date(start.getFullYear(), start.getMonth(), start.getDate());\n        \n        // Check if this lane is free for all days of this event\n        while (current <= end && laneAvailable) {\n          const dateString = `${current.getFullYear()}-${current.getMonth()}-${current.getDate()}`;\n          if (eventMap.has(dateString)) {\n            const dayEvents = eventMap.get(dateString);\n            if (dayEvents.some(e => e.lane === lane)) {\n              laneAvailable = false;\n            }\n          }\n          current.setDate(current.getDate() + 1);\n        }\n        \n        if (laneAvailable) {\n          assignedLane = lane;\n          break;\n        }\n      }\n      \n      // If no lane available, skip this event (max 3 events per day)\n      if (assignedLane === null) continue;\n      \n      // Now assign this event to its lane for all its days\n      let current = new Date(start.getFullYear(), start.getMonth(), start.getDate());\n      \n      while (current <= end) {\n        const dateString = `${current.getFullYear()}-${current.getMonth()}-${current.getDate()}`;\n        const isStart = current.toDateString() === start.toDateString();\n        const isEnd = current.toDateString() === end.toDateString();\n        \n        let type = 'middle';\n        if (isStart && isEnd) type = 'single';\n        else if (isStart) type = 'start';\n        else if (isEnd) type = 'end';\n        \n        // Store event with its assigned lane\n        if (!eventMap.has(dateString)) {\n          eventMap.set(dateString, []);\n        }\n        eventMap.get(dateString).push({ \n          type, \n          eventType: event.eventType || 'conjunto',\n          lane: assignedLane\n        });\n        current.setDate(current.getDate() + 1);\n      }\n    }\n    \n    return eventMap;\n  }, [events]);\n\n  const year = currentDate.getFullYear();\n  const month = currentDate.getMonth();\n\n  const firstDayOfMonth = (new Date(year, month, 1).getDay() + 6) % 7;\n  const daysInMonth = new Date(year, month + 1, 0).getDate();\n\n  const handlePrevMonth = () => {\n    setCurrentDate(new Date(year, month - 1, 1));\n  };\n\n  const handleNextMonth = () => {\n    setCurrentDate(new Date(year, month + 1, 1));\n  };\n\n  const calendarDays = [];\n  // Padding for previous month\n  for (let i = 0; i < firstDayOfMonth; i++) {\n    calendarDays.push(<div key={`pad-start-${i}`} className=\"p-2\"></div>);\n  }\n  // Days of current month\n  for (let day = 1; day <= daysInMonth; day++) {\n    const date = new Date(year, month, day);\n    const isToday = date.toDateString() === new Date().toDateString();\n    const isSpecialDay = day === 24; // Day 24 is special ❤️\n    const isAprilParty = day === 21 && month === 3; // April 21 🎉\n    const isNovemberParty = day === 4 && month === 10; // November 4 🎉\n    const dateString = `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`;\n    const eventInfos = eventsByDay.get(dateString) || [];\n\n    // Render up to 3 event lines, stacked vertically\n    const eventBars = eventInfos.slice(0, 3).map((eventInfo, index) => {\n      // Color based on event type\n      let colorClass = 'bg-rose-500'; // Default: conjunto (pink)\n      if (eventInfo.eventType === 'novio') {\n        colorClass = 'bg-yellow-500'; // Novio: yellow\n      } else if (eventInfo.eventType === 'novia') {\n        colorClass = 'bg-purple-500'; // Novia: purple\n      }\n      \n      // Position each line vertically (bottom-1.5, bottom-3, bottom-4.5)\n      const bottomPosition = index === 0 ? 'bottom-1.5' : index === 1 ? 'bottom-3' : 'bottom-4.5';\n      const baseClasses = `absolute ${bottomPosition} h-1 ${colorClass}`;\n      \n      if (eventInfo.type === 'single') {\n        return <div key={index} className={`${baseClasses} left-1/2 -translate-x-1/2 w-4 rounded-full`}></div>;\n      } else if (eventInfo.type === 'start') {\n        // Start from where single event would start, extend to edge + margin\n        return <div key={index} className={`${baseClasses} right-1 rounded-full`} style={{left: 'calc(50% - 8px)'}}></div>;\n      } else if (eventInfo.type === 'end') {\n        // Start from edge + margin, end where single event would end  \n        return <div key={index} className={`${baseClasses} left-1 rounded-full`} style={{right: 'calc(50% - 8px)'}}></div>;\n      } else if (eventInfo.type === 'middle') {\n        // Full width with small margins to preserve border radius\n        return <div key={index} className={`${baseClasses} left-1 right-1 rounded-full`}></div>;\n      }\n      return null;\n    });\n\n    calendarDays.push(\n      <div key={`day-${day}`} className={`p-2 text-center border border-gray-200/80 rounded-lg h-16 flex items-center justify-center relative ${isSpecialDay ? 'bg-rose-50' : ''} ${isAprilParty ? 'bg-purple-50' : ''} ${isNovemberParty ? 'bg-yellow-50' : ''}`}>\n        <span className={`w-8 h-8 flex items-center justify-center rounded-full ${isToday ? 'bg-rose-500 text-white' : ''}`}>\n          {day}\n        </span>\n        {isSpecialDay && (\n          <div className=\"absolute top-0.5 right-0.5 text-xs\">\n            💖\n          </div>\n        )}\n        {(isAprilParty || isNovemberParty) && (\n          <div className=\"absolute top-0.5 right-0.5 text-xs\">\n            🎉\n          </div>\n        )}\n        {eventBars}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <button onClick={handlePrevMonth} className=\"btn-ghost p-2 rounded-full w-10 h-10 flex items-center justify-center text-xl\">‹</button>\n        <h3 className=\"font-semibold text-lg text-center\">{monthNames[month]} {year}</h3>\n        <button onClick={handleNextMonth} className=\"btn-ghost p-2 rounded-full w-10 h-10 flex items-center justify-center text-xl\">›</button>\n      </div>\n      <div className=\"grid grid-cols-7 gap-2 text-center text-sm font-medium text-gray-500 mb-2\">\n        {dayNames.slice(1).map(day => <div key={day}>{day}</div>)}\n        <div>{dayNames[0]}</div>\n      </div>\n      <div className=\"grid grid-cols-7 gap-1\">\n        {calendarDays}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}