{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, enableIndexedDbPersistence } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\nlet app;\nlet auth;\nlet db;\nlet storage;\nlet authReady;\nconst required = [firebaseConfig.apiKey, firebaseConfig.projectId, firebaseConfig.appId];\nif (required.every(Boolean)) {\n  app = initializeApp(firebaseConfig);\n  auth = getAuth(app);\n  // Anonymous sign-in for simple access control\n  authReady = new Promise(resolve => {\n    const unsub = onAuthStateChanged(auth, u => {\n      if (u) {\n        unsub();\n        resolve(u);\n      }\n    });\n  });\n  signInAnonymously(auth).catch(e => console.warn('Anonymous auth failed', e));\n  db = getFirestore(app);\n  // Enable offline persistence where possible\n  enableIndexedDbPersistence(db).catch(err => {\n    // err.code can be 'failed-precondition' (multiple tabs) or 'unimplemented' (browser)\n    console.warn('Firestore persistence not enabled:', (err === null || err === void 0 ? void 0 : err.code) || err);\n  });\n  storage = getStorage(app, `gs://${firebaseConfig.storageBucket}`);\n} else {\n  console.warn('Firebase config missing (REACT_APP_*) — skipping initialization for now.');\n  authReady = Promise.resolve(null);\n}\nexport { app, auth, db, storage, authReady };","map":{"version":3,"names":["initializeApp","getAuth","signInAnonymously","onAuthStateChanged","getFirestore","enableIndexedDbPersistence","getStorage","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","app","auth","db","storage","authReady","required","every","Boolean","Promise","resolve","unsub","u","catch","e","console","warn","err","code"],"sources":["/Users/sebastianfornelli/XcodeProjects/Relacion/CascadeProjects/windsurf-project/client/src/lib/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth, signInAnonymously, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, enableIndexedDbPersistence } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nlet app; let auth; let db; let storage; let authReady;\n\nconst required = [\n  firebaseConfig.apiKey,\n  firebaseConfig.projectId,\n  firebaseConfig.appId,\n];\n\nif (required.every(Boolean)) {\n  app = initializeApp(firebaseConfig);\n  auth = getAuth(app);\n  // Anonymous sign-in for simple access control\n  authReady = new Promise((resolve) => {\n    const unsub = onAuthStateChanged(auth, (u) => {\n      if (u) { unsub(); resolve(u); }\n    });\n  });\n  signInAnonymously(auth).catch((e) => console.warn('Anonymous auth failed', e));\n  db = getFirestore(app);\n  // Enable offline persistence where possible\n  enableIndexedDbPersistence(db).catch((err) => {\n    // err.code can be 'failed-precondition' (multiple tabs) or 'unimplemented' (browser)\n    console.warn('Firestore persistence not enabled:', err?.code || err);\n  });\n  storage = getStorage(app, `gs://${firebaseConfig.storageBucket}`);\n} else {\n  console.warn('Firebase config missing (REACT_APP_*) — skipping initialization for now.');\n  authReady = Promise.resolve(null);\n}\n\nexport { app, auth, db, storage, authReady };\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,iBAAiB,EAAEC,kBAAkB,QAAQ,eAAe;AAC9E,SAASC,YAAY,EAAEC,0BAA0B,QAAQ,oBAAoB;AAC7E,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA0B;EAC9CC,UAAU,EAAEH,OAAO,CAACC,GAAG,CAACG,8BAA8B;EACtDC,SAAS,EAAEL,OAAO,CAACC,GAAG,CAACK,6BAA6B;EACpDC,aAAa,EAAEP,OAAO,CAACC,GAAG,CAACO,iCAAiC;EAC5DC,iBAAiB,EAAET,OAAO,CAACC,GAAG,CAACS,sCAAsC;EACrEC,KAAK,EAAEX,OAAO,CAACC,GAAG,CAACW,yBAAyB;EAC5CC,aAAa,EAAEb,OAAO,CAACC,GAAG,CAACa;AAC7B,CAAC;AAED,IAAIC,GAAG;AAAE,IAAIC,IAAI;AAAE,IAAIC,EAAE;AAAE,IAAIC,OAAO;AAAE,IAAIC,SAAS;AAErD,MAAMC,QAAQ,GAAG,CACftB,cAAc,CAACC,MAAM,EACrBD,cAAc,CAACO,SAAS,EACxBP,cAAc,CAACa,KAAK,CACrB;AAED,IAAIS,QAAQ,CAACC,KAAK,CAACC,OAAO,CAAC,EAAE;EAC3BP,GAAG,GAAGxB,aAAa,CAACO,cAAc,CAAC;EACnCkB,IAAI,GAAGxB,OAAO,CAACuB,GAAG,CAAC;EACnB;EACAI,SAAS,GAAG,IAAII,OAAO,CAAEC,OAAO,IAAK;IACnC,MAAMC,KAAK,GAAG/B,kBAAkB,CAACsB,IAAI,EAAGU,CAAC,IAAK;MAC5C,IAAIA,CAAC,EAAE;QAAED,KAAK,CAAC,CAAC;QAAED,OAAO,CAACE,CAAC,CAAC;MAAE;IAChC,CAAC,CAAC;EACJ,CAAC,CAAC;EACFjC,iBAAiB,CAACuB,IAAI,CAAC,CAACW,KAAK,CAAEC,CAAC,IAAKC,OAAO,CAACC,IAAI,CAAC,uBAAuB,EAAEF,CAAC,CAAC,CAAC;EAC9EX,EAAE,GAAGtB,YAAY,CAACoB,GAAG,CAAC;EACtB;EACAnB,0BAA0B,CAACqB,EAAE,CAAC,CAACU,KAAK,CAAEI,GAAG,IAAK;IAC5C;IACAF,OAAO,CAACC,IAAI,CAAC,oCAAoC,EAAE,CAAAC,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEC,IAAI,KAAID,GAAG,CAAC;EACtE,CAAC,CAAC;EACFb,OAAO,GAAGrB,UAAU,CAACkB,GAAG,EAAE,QAAQjB,cAAc,CAACS,aAAa,EAAE,CAAC;AACnE,CAAC,MAAM;EACLsB,OAAO,CAACC,IAAI,CAAC,0EAA0E,CAAC;EACxFX,SAAS,GAAGI,OAAO,CAACC,OAAO,CAAC,IAAI,CAAC;AACnC;AAEA,SAAST,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAEC,OAAO,EAAEC,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}