{"ast":null,"code":"import { auth, db, storage } from './firebase';\nimport { getThumb, putThumb, getOrig, putOrig, pruneOrig } from './photoCache';\n\n// Helpers\nfunction genId() {\n  return `${Date.now().toString(36)}-${Math.random().toString(36).slice(2, 8)}`.toUpperCase();\n}\nasync function fileToCanvas(file) {\n  const img = document.createElement('img');\n  img.decoding = 'async';\n  img.loading = 'eager';\n  const url = URL.createObjectURL(file);\n  try {\n    await new Promise((res, rej) => {\n      img.onload = () => res();\n      img.onerror = rej;\n      img.src = url;\n    });\n  } finally {\n    URL.revokeObjectURL(url);\n  }\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  return {\n    img,\n    canvas,\n    ctx\n  };\n}\nfunction drawContain(img, max) {\n  const ratio = Math.min(max / img.width, max / img.height, 1);\n  const w = Math.round(img.width * ratio);\n  const h = Math.round(img.height * ratio);\n  return {\n    w,\n    h\n  };\n}\nasync function resizeToBlob(file, maxSize, quality = 0.85) {\n  const {\n    img,\n    canvas,\n    ctx\n  } = await fileToCanvas(file);\n  const {\n    w,\n    h\n  } = drawContain(img, maxSize);\n  canvas.width = w;\n  canvas.height = h;\n  ctx.drawImage(img, 0, 0, w, h);\n  const blob = await new Promise(resolve => canvas.toBlob(resolve, 'image/jpeg', quality));\n  return blob;\n}\n\n// Local fallback store for metadata\nfunction localKey(pairId) {\n  return `photos:${pairId}`;\n}\nfunction readLocalMeta(pairId) {\n  try {\n    return JSON.parse(localStorage.getItem(localKey(pairId)) || '[]');\n  } catch {\n    return [];\n  }\n}\nfunction writeLocalMeta(pairId, arr) {\n  try {\n    localStorage.setItem(localKey(pairId), JSON.stringify(arr));\n  } catch {}\n}\n\n// Firebase imports lazy to avoid bundling when not needed\nlet _fb;\nasync function fb() {\n  if (!_fb) {\n    try {\n      const {\n        ref,\n        uploadBytes,\n        getDownloadURL\n      } = await import('firebase/storage');\n      const {\n        collection,\n        doc,\n        setDoc,\n        getDocs,\n        query,\n        orderBy,\n        limit,\n        serverTimestamp\n      } = await import('firebase/firestore');\n      _fb = {\n        ref,\n        uploadBytes,\n        getDownloadURL,\n        collection,\n        doc,\n        setDoc,\n        getDocs,\n        query,\n        orderBy,\n        limit,\n        serverTimestamp\n      };\n    } catch (e) {\n      _fb = null;\n    }\n  }\n  return _fb;\n}\nexport async function listPhotos(pairId, max = 100) {\n  const items = [];\n  const fblib = await fb();\n  if (db && fblib) {\n    try {\n      const {\n        collection,\n        getDocs,\n        query,\n        orderBy,\n        limit\n      } = fblib;\n      const col = collection(db, 'pairs', pairId, 'photos');\n      const q = query(col, orderBy('createdAt', 'desc'), limit(max));\n      const snap = await getDocs(q);\n      for (const docSnap of snap.docs) {\n        var _docSnap$data$created, _docSnap$data$created2;\n        const id = docSnap.id;\n        // try cached thumb first\n        let thumbUrl = '';\n        const blob = await getThumb(id);\n        if (blob) {\n          thumbUrl = URL.createObjectURL(blob);\n        } else {\n          // fetch from storage and cache\n          try {\n            const {\n              ref,\n              getDownloadURL\n            } = fblib;\n            const tRef = ref(storage, `pairs/${pairId}/photos/${id}/thumb.jpg`);\n            const url = await getDownloadURL(tRef);\n            const resp = await fetch(url);\n            const b = await resp.blob();\n            await putThumb(id, b);\n            thumbUrl = URL.createObjectURL(b);\n          } catch {}\n        }\n        items.push({\n          id,\n          thumbUrl,\n          createdAt: ((_docSnap$data$created = docSnap.data().createdAt) === null || _docSnap$data$created === void 0 ? void 0 : (_docSnap$data$created2 = _docSnap$data$created.toMillis) === null || _docSnap$data$created2 === void 0 ? void 0 : _docSnap$data$created2.call(_docSnap$data$created)) || Date.now()\n        });\n      }\n      return items;\n    } catch (e) {\n      // Fall back to local\n    }\n  }\n  // Local-only\n  const meta = readLocalMeta(pairId);\n  for (const m of meta) {\n    const b = await getThumb(m.id);\n    const thumbUrl = b ? URL.createObjectURL(b) : '';\n    items.push({\n      id: m.id,\n      thumbUrl,\n      createdAt: m.createdAt\n    });\n  }\n  // Sort desc by createdAt\n  items.sort((a, b) => (b.createdAt || 0) - (a.createdAt || 0));\n  return items.slice(0, max);\n}\nexport async function getOriginal(pairId, id) {\n  const cached = await getOrig(id);\n  if (cached) return cached;\n  const fblib = await fb();\n  if (storage && fblib) {\n    try {\n      const {\n        ref,\n        getDownloadURL\n      } = fblib;\n      const oRef = ref(storage, `pairs/${pairId}/photos/${id}/orig.jpg`);\n      const url = await getDownloadURL(oRef);\n      const resp = await fetch(url);\n      const blob = await resp.blob();\n      await putOrig(id, blob);\n      await pruneOrig(20);\n      return blob;\n    } catch {}\n  }\n  return null;\n}\nexport async function uploadPhoto(pairId, file, identity = 'yo') {\n  const id = genId();\n  // make derivatives\n  const thumbBlob = await resizeToBlob(file, 480, 0.8);\n  const origBlob = await resizeToBlob(file, 1600, 0.9);\n\n  // cache locally\n  await putThumb(id, thumbBlob);\n  await putOrig(id, origBlob);\n  await pruneOrig(20);\n  const now = Date.now();\n  let remoteOk = false;\n  const fblib = await fb();\n  if (db && storage && fblib && auth !== null && auth !== void 0 && auth.currentUser) {\n    try {\n      const {\n        ref,\n        uploadBytes,\n        collection,\n        doc,\n        setDoc,\n        serverTimestamp\n      } = fblib;\n      const base = `pairs/${pairId}/photos/${id}`;\n      await uploadBytes(ref(storage, `${base}/thumb.jpg`), thumbBlob, {\n        contentType: 'image/jpeg'\n      });\n      await uploadBytes(ref(storage, `${base}/orig.jpg`), origBlob, {\n        contentType: 'image/jpeg'\n      });\n      await setDoc(doc(collection(db, 'pairs', pairId, 'photos'), id), {\n        createdAt: serverTimestamp(),\n        createdBy: auth.currentUser.uid,\n        identity\n      });\n      remoteOk = true;\n    } catch (e) {\n      // ignore, we already cached locally\n    }\n  }\n\n  // local meta\n  const meta = readLocalMeta(pairId);\n  meta.push({\n    id,\n    createdAt: now,\n    identity\n  });\n  writeLocalMeta(pairId, meta);\n  return {\n    id,\n    thumbUrl: URL.createObjectURL(thumbBlob),\n    createdAt: now,\n    remote: remoteOk\n  };\n}","map":{"version":3,"names":["auth","db","storage","getThumb","putThumb","getOrig","putOrig","pruneOrig","genId","Date","now","toString","Math","random","slice","toUpperCase","fileToCanvas","file","img","document","createElement","decoding","loading","url","URL","createObjectURL","Promise","res","rej","onload","onerror","src","revokeObjectURL","canvas","ctx","getContext","drawContain","max","ratio","min","width","height","w","round","h","resizeToBlob","maxSize","quality","drawImage","blob","resolve","toBlob","localKey","pairId","readLocalMeta","JSON","parse","localStorage","getItem","writeLocalMeta","arr","setItem","stringify","_fb","fb","ref","uploadBytes","getDownloadURL","collection","doc","setDoc","getDocs","query","orderBy","limit","serverTimestamp","e","listPhotos","items","fblib","col","q","snap","docSnap","docs","_docSnap$data$created","_docSnap$data$created2","id","thumbUrl","tRef","resp","fetch","b","push","createdAt","data","toMillis","call","meta","m","sort","a","getOriginal","cached","oRef","uploadPhoto","identity","thumbBlob","origBlob","remoteOk","currentUser","base","contentType","createdBy","uid","remote"],"sources":["/Users/sebastianfornelli/XcodeProjects/Relacion/CascadeProjects/windsurf-project/client/src/lib/photos.js"],"sourcesContent":["import { auth, db, storage } from './firebase';\nimport { getThumb, putThumb, getOrig, putOrig, pruneOrig } from './photoCache';\n\n// Helpers\nfunction genId() {\n  return `${Date.now().toString(36)}-${Math.random().toString(36).slice(2, 8)}`.toUpperCase();\n}\n\nasync function fileToCanvas(file) {\n  const img = document.createElement('img');\n  img.decoding = 'async';\n  img.loading = 'eager';\n  const url = URL.createObjectURL(file);\n  try {\n    await new Promise((res, rej) => { img.onload = () => res(); img.onerror = rej; img.src = url; });\n  } finally {\n    URL.revokeObjectURL(url);\n  }\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  return { img, canvas, ctx };\n}\n\nfunction drawContain(img, max) {\n  const ratio = Math.min(max / img.width, max / img.height, 1);\n  const w = Math.round(img.width * ratio);\n  const h = Math.round(img.height * ratio);\n  return { w, h };\n}\n\nasync function resizeToBlob(file, maxSize, quality = 0.85) {\n  const { img, canvas, ctx } = await fileToCanvas(file);\n  const { w, h } = drawContain(img, maxSize);\n  canvas.width = w; canvas.height = h;\n  ctx.drawImage(img, 0, 0, w, h);\n  const blob = await new Promise((resolve) => canvas.toBlob(resolve, 'image/jpeg', quality));\n  return blob;\n}\n\n// Local fallback store for metadata\nfunction localKey(pairId) { return `photos:${pairId}`; }\nfunction readLocalMeta(pairId) {\n  try { return JSON.parse(localStorage.getItem(localKey(pairId)) || '[]'); } catch { return []; }\n}\nfunction writeLocalMeta(pairId, arr) {\n  try { localStorage.setItem(localKey(pairId), JSON.stringify(arr)); } catch {}\n}\n\n// Firebase imports lazy to avoid bundling when not needed\nlet _fb;\nasync function fb() {\n  if (!_fb) {\n    try {\n      const { ref, uploadBytes, getDownloadURL } = await import('firebase/storage');\n      const { collection, doc, setDoc, getDocs, query, orderBy, limit, serverTimestamp } = await import('firebase/firestore');\n      _fb = { ref, uploadBytes, getDownloadURL, collection, doc, setDoc, getDocs, query, orderBy, limit, serverTimestamp };\n    } catch (e) {\n      _fb = null;\n    }\n  }\n  return _fb;\n}\n\nexport async function listPhotos(pairId, max = 100) {\n  const items = [];\n  const fblib = await fb();\n  if (db && fblib) {\n    try {\n      const { collection, getDocs, query, orderBy, limit } = fblib;\n      const col = collection(db, 'pairs', pairId, 'photos');\n      const q = query(col, orderBy('createdAt', 'desc'), limit(max));\n      const snap = await getDocs(q);\n      for (const docSnap of snap.docs) {\n        const id = docSnap.id;\n        // try cached thumb first\n        let thumbUrl = '';\n        const blob = await getThumb(id);\n        if (blob) {\n          thumbUrl = URL.createObjectURL(blob);\n        } else {\n          // fetch from storage and cache\n          try {\n            const { ref, getDownloadURL } = fblib;\n            const tRef = ref(storage, `pairs/${pairId}/photos/${id}/thumb.jpg`);\n            const url = await getDownloadURL(tRef);\n            const resp = await fetch(url);\n            const b = await resp.blob();\n            await putThumb(id, b);\n            thumbUrl = URL.createObjectURL(b);\n          } catch {}\n        }\n        items.push({ id, thumbUrl, createdAt: docSnap.data().createdAt?.toMillis?.() || Date.now() });\n      }\n      return items;\n    } catch (e) {\n      // Fall back to local\n    }\n  }\n  // Local-only\n  const meta = readLocalMeta(pairId);\n  for (const m of meta) {\n    const b = await getThumb(m.id);\n    const thumbUrl = b ? URL.createObjectURL(b) : '';\n    items.push({ id: m.id, thumbUrl, createdAt: m.createdAt });\n  }\n  // Sort desc by createdAt\n  items.sort((a, b) => (b.createdAt || 0) - (a.createdAt || 0));\n  return items.slice(0, max);\n}\n\nexport async function getOriginal(pairId, id) {\n  const cached = await getOrig(id);\n  if (cached) return cached;\n  const fblib = await fb();\n  if (storage && fblib) {\n    try {\n      const { ref, getDownloadURL } = fblib;\n      const oRef = ref(storage, `pairs/${pairId}/photos/${id}/orig.jpg`);\n      const url = await getDownloadURL(oRef);\n      const resp = await fetch(url);\n      const blob = await resp.blob();\n      await putOrig(id, blob);\n      await pruneOrig(20);\n      return blob;\n    } catch {}\n  }\n  return null;\n}\n\nexport async function uploadPhoto(pairId, file, identity = 'yo') {\n  const id = genId();\n  // make derivatives\n  const thumbBlob = await resizeToBlob(file, 480, 0.8);\n  const origBlob = await resizeToBlob(file, 1600, 0.9);\n\n  // cache locally\n  await putThumb(id, thumbBlob);\n  await putOrig(id, origBlob);\n  await pruneOrig(20);\n\n  const now = Date.now();\n  let remoteOk = false;\n\n  const fblib = await fb();\n  if (db && storage && fblib && auth?.currentUser) {\n    try {\n      const { ref, uploadBytes, collection, doc, setDoc, serverTimestamp } = fblib;\n      const base = `pairs/${pairId}/photos/${id}`;\n      await uploadBytes(ref(storage, `${base}/thumb.jpg`), thumbBlob, { contentType: 'image/jpeg' });\n      await uploadBytes(ref(storage, `${base}/orig.jpg`), origBlob, { contentType: 'image/jpeg' });\n      await setDoc(doc(collection(db, 'pairs', pairId, 'photos'), id), {\n        createdAt: serverTimestamp(),\n        createdBy: auth.currentUser.uid,\n        identity,\n      });\n      remoteOk = true;\n    } catch (e) {\n      // ignore, we already cached locally\n    }\n  }\n\n  // local meta\n  const meta = readLocalMeta(pairId);\n  meta.push({ id, createdAt: now, identity });\n  writeLocalMeta(pairId, meta);\n\n  return { id, thumbUrl: URL.createObjectURL(thumbBlob), createdAt: now, remote: remoteOk };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}